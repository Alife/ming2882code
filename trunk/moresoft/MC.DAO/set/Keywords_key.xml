<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Keywords_key" xmlns="http://ibatis.apache.org/mapping"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  >
  <alias>
    <typeAlias alias="Keywords_key" type="MC.Model.Keywords_key,MC.Model" />
  </alias>

  <resultMaps>
    <resultMap id="SelectResult" class="Keywords_key" >
      <result property="ID_key" column="ID_key" />
      <result property="Name_key" column="Name_key" />
      <result property="Url_key" column="Url_key" />
      <result property="Num_key" column="Num_key" />
      <result property="Sort_key" column="Sort_key" />
    </resultMap>
  </resultMaps>
  <statements>
    <sql id="MC.Model.Keywords_key.sqlwhere">
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="ID_key">
          ID_key = #ID_key#
        </isNotNull>
        <isNotNull prepend="AND" property="Name_key">
          Name_key = #Name_key#
        </isNotNull>
        <isNotNull prepend="AND" property="Url_key">
          Url_key = #Url_key#
        </isNotNull>
        <isNotNull prepend="AND" property="Num_key">
          Num_key = #Num_key#
        </isNotNull>
        <isNotNull prepend="AND" property="Sort_key">
          Sort_key = #Sort_key#
        </isNotNull>
      </dynamic>
    </sql>
    <select id="MC.Model.Keywords_key.Count" parameterClass="System.Collections.IDictionary" resultClass="int">
      Select count(1) FROM Keywords_key <include refid="MC.Model.Keywords_key.sqlwhere"/>
    </select>
    <select id="MC.Model.Keywords_key.LoadPageList" parameterClass="System.Collections.IDictionary" resultMap="SelectResult">
      Select ID_key,Name_key,Url_key,Num_key,Sort_key FROM(
      Select ID_key,Name_key,Url_key,Num_key,Sort_key
      ,ROW_NUMBER() Over(
      <dynamic>
        <isNotNull property="sort">order by $sort$ $dir$</isNotNull>
        <isNull property="sort">order by Sort_key</isNull>
      </dynamic>) as rowNum
      FROM Keywords_key
      <include refid="MC.Model.Keywords_key.sqlwhere"/>
      ) as temptable
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="start">
          rowNum BETWEEN #start#+1
          <isNotNull prepend="AND" property="limit">
            #start#+#limit#
          </isNotNull>
        </isNotNull>
      </dynamic>
    </select>
    <select id="MC.Model.Keywords_key.Load" parameterClass="System.Collections.IDictionary" resultMap="SelectResult">
      Select ID_key,Name_key,Url_key,Num_key,Sort_key FROM Keywords_key
      <include refid="MC.Model.Keywords_key.sqlwhere"/>
      <dynamic>
        <isNotNull property="OrderBy">
          $OrderBy$
        </isNotNull>
      </dynamic>
    </select>
    <insert id="MC.Model.Keywords_key.Insert" parameterClass="Keywords_key">
      insert into Keywords_key(
      Name_key
      ,Url_key
      ,Num_key
      ,Sort_key
      )values (
      #Name_key#
      ,#Url_key#
      ,#Num_key#
      ,#Sort_key#
      )
      <selectKey property="ID_key" type="post" resultClass="int">
        ${selectKey}
      </selectKey>
    </insert>
    <update id="MC.Model.Keywords_key.Update" parameterClass="Keywords_key">
      update Keywords_key set
      Name_key = #Name_key#
      ,Url_key = #Url_key#
      ,Num_key = #Num_key#
      ,Sort_key = #Sort_key#
      WHERE
      ID_key = #ID_key#
    </update>
    <delete id="MC.Model.Keywords_key.Delete" parameterClass="list">
      delete
      FROM Keywords_key
      WHERE ID_key IN
      <iterate property="ids" open="(" close=")"  conjunction="," >
        #ids[]#
      </iterate>
    </delete>
  </statements>
</sqlMap>

