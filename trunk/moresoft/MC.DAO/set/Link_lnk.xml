<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Link_lnk" xmlns="http://ibatis.apache.org/mapping"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  >
  <alias>
    <typeAlias alias="Link_lnk" type="MC.Model.Link_lnk,MC.Model" />
  </alias>

  <resultMaps>
    <resultMap id="SelectResult" class="Link_lnk" >
      <result property="ID_lnk" column="ID_lnk" />
      <result property="Name_lnk" column="Name_lnk" />
      <result property="Url_lnk" column="Url_lnk" />
      <result property="Sort_lnk" column="Sort_lnk" />
      <result property="IsHide_lnk" column="IsHide_lnk" />
    </resultMap>
  </resultMaps>
  <statements>
    <sql id="MC.Model.Link_lnk.sqlwhere">
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="ID_lnk">
          ID_lnk = #ID_lnk#
        </isNotNull>
        <isNotNull prepend="AND" property="Name_lnk">
          Name_lnk = #Name_lnk#
        </isNotNull>
        <isNotNull prepend="AND" property="Url_lnk">
          Url_lnk = #Url_lnk#
        </isNotNull>
        <isNotNull prepend="AND" property="Sort_lnk">
          Sort_lnk = #Sort_lnk#
        </isNotNull>
        <isNotNull prepend="AND" property="IsHide_lnk">
          IsHide_lnk = #IsHide_lnk#
        </isNotNull>
      </dynamic>
    </sql>
    <select id="MC.Model.Link_lnk.Count" parameterClass="System.Collections.IDictionary" resultClass="int">
      Select count(1) FROM Link_lnk <include refid="MC.Model.Link_lnk.sqlwhere"/>
    </select>
    <select id="MC.Model.Link_lnk.LoadPageList" parameterClass="System.Collections.IDictionary" resultMap="SelectResult">
      Select ID_lnk,Name_lnk,Url_lnk,Sort_lnk,IsHide_lnk FROM(
      Select ID_lnk,Name_lnk,Url_lnk,Sort_lnk,IsHide_lnk
      ,ROW_NUMBER() Over(
      <dynamic>
        <isNotNull property="sort">order by $sort$ $dir$</isNotNull>
        <isNull property="sort">order by ID_lnk desc</isNull>
      </dynamic>) as rowNum
      FROM Link_lnk
      <include refid="MC.Model.Link_lnk.sqlwhere"/>
      ) as temptable
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="start">
          rowNum BETWEEN #start#+1
          <isNotNull prepend="AND" property="limit">
            #start#+#limit#
          </isNotNull>
        </isNotNull>
      </dynamic>
    </select>
    <select id="MC.Model.Link_lnk.Load" parameterClass="System.Collections.IDictionary" resultMap="SelectResult">
      Select ID_lnk,Name_lnk,Url_lnk,Sort_lnk,IsHide_lnk FROM Link_lnk
      <include refid="MC.Model.Link_lnk.sqlwhere"/>
      <dynamic>
        <isNotNull property="OrderBy">
          $OrderBy$
        </isNotNull>
      </dynamic>
    </select>
    <insert id="MC.Model.Link_lnk.Insert" parameterClass="Link_lnk">
      insert into Link_lnk(
      Name_lnk
      ,Url_lnk
      ,Sort_lnk
      ,IsHide_lnk
      )values (
      #Name_lnk#
      ,#Url_lnk#
      ,#Sort_lnk#
      ,#IsHide_lnk#
      )
      <selectKey property="ID_lnk" type="post" resultClass="int">
        ${selectKey}
      </selectKey>
    </insert>
    <update id="MC.Model.Link_lnk.Update" parameterClass="Link_lnk">
      update Link_lnk set
      Name_lnk = #Name_lnk#
      ,Url_lnk = #Url_lnk#
      ,Sort_lnk = #Sort_lnk#
      ,IsHide_lnk = #IsHide_lnk#
      WHERE
      ID_lnk = #ID_lnk#
    </update>
    <delete id="MC.Model.Link_lnk.Delete" parameterClass="list">
      delete
      FROM Link_lnk
      WHERE ID_lnk IN
      <iterate property="ids" open="(" close=")"  conjunction="," >
        #ids[]#
      </iterate>
    </delete>
  </statements>
</sqlMap>

