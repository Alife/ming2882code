<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Info_inf" xmlns="http://ibatis.apache.org/mapping"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  >
  <alias>
    <typeAlias alias="Info_inf" type="MC.Model.Info_inf,MC.Model" />
  </alias>

  <resultMaps>
    <resultMap id="SelectResult" class="Info_inf" >
      <result property="ID_inf" column="ID_inf" />
      <result property="InfoTypeID_inf" column="InfoTypeID_inf" />
      <result property="Title_inf" column="Title_inf" />
      <result property="Content_inf" column="Content_inf" />
      <result property="Hits_inf" column="Hits_inf" />
      <result property="TopType_inf" column="TopType_inf" />
      <result property="IndexTagID_inf" column="IndexTagID_inf" />
      <result property="CreateTime_inf" column="CreateTime_inf" />
      <result property="Author_inf" column="Author_inf" />
      <result property="Keywords_inf" column="Keywords_inf" />
    </resultMap>
  </resultMaps>
  <statements>
    <sql id="MC.Model.Info_inf.sqlwhere">
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="ID_inf">
          ID_inf = #ID_inf#
        </isNotNull>
        <isNotNull prepend="AND" property="InfoTypeID_inf">
          InfoTypeID_inf = #InfoTypeID_inf#
        </isNotNull>
        <isNotNull prepend="AND" property="Title_inf">
          Title_inf = #Title_inf#
        </isNotNull>
        <isNotNull prepend="AND" property="Content_inf">
          Content_inf = #Content_inf#
        </isNotNull>
        <isNotNull prepend="AND" property="Hits_inf">
          Hits_inf = #Hits_inf#
        </isNotNull>
        <isNotNull prepend="AND" property="TopType_inf">
          TopType_inf like '%'+#TopType_inf#+'%'
        </isNotNull>
        <isNotNull prepend="AND" property="IndexTagID_inf">
          IndexTagID_inf = #IndexTagID_inf#
        </isNotNull>
        <isNotNull prepend="AND" property="CreateTime_inf">
          CreateTime_inf = #CreateTime_inf#
        </isNotNull>
        <isNotNull prepend="AND" property="Author_inf">
          Author_inf = #Author_inf#
        </isNotNull>
        <isNotNull prepend="AND" property="Keywords_inf">
          Keywords_inf = #Keywords_inf#
        </isNotNull>
      </dynamic>
    </sql>
    <select id="MC.Model.Info_inf.Count" parameterClass="System.Collections.IDictionary" resultClass="int">
      Select count(1) FROM Info_inf <include refid="MC.Model.Info_inf.sqlwhere"/>
    </select>
    <select id="MC.Model.Info_inf.LoadPageList" parameterClass="System.Collections.IDictionary" resultMap="SelectResult">
      Select ID_inf,InfoTypeID_inf,Title_inf,Content_inf,Hits_inf,TopType_inf,IndexTagID_inf,CreateTime_inf,Author_inf,Keywords_inf FROM(
      Select ID_inf,InfoTypeID_inf,Title_inf,Content_inf,Hits_inf,TopType_inf,IndexTagID_inf,CreateTime_inf,Author_inf,Keywords_inf
      ,ROW_NUMBER() Over(
      <dynamic>
        <isNotNull property="sort">order by $sort$ $dir$</isNotNull>
        <isNull property="sort">order by ID_inf desc</isNull>
      </dynamic>) as rowNum
      FROM Info_inf
      <include refid="MC.Model.Info_inf.sqlwhere"/>
      ) as temptable
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="start">
          rowNum BETWEEN #start#+1
          <isNotNull prepend="AND" property="limit">
            #start#+#limit#
          </isNotNull>
        </isNotNull>
      </dynamic>
    </select>
    <select id="MC.Model.Info_inf.Load" parameterClass="System.Collections.IDictionary" resultMap="SelectResult">
      Select ID_inf,InfoTypeID_inf,Title_inf,Content_inf,Hits_inf,TopType_inf,IndexTagID_inf,CreateTime_inf,Author_inf,Keywords_inf FROM Info_inf
     <include refid="MC.Model.Info_inf.sqlwhere"/>
      <dynamic>
        <isNotNull property="OrderBy">
          $OrderBy$
        </isNotNull>
      </dynamic>
    </select>
    <insert id="MC.Model.Info_inf.Insert" parameterClass="Info_inf">
      insert into Info_inf(
      InfoTypeID_inf
      ,Title_inf
      ,Content_inf
      ,Hits_inf
      ,TopType_inf
      ,IndexTagID_inf
      ,CreateTime_inf
      ,Author_inf
      ,Keywords_inf
      )values (
      #InfoTypeID_inf#
      ,#Title_inf#
      ,#Content_inf#
      ,#Hits_inf#
      ,#TopType_inf#
      ,#IndexTagID_inf#
      ,#CreateTime_inf#
      ,#Author_inf#
      ,#Keywords_inf#
      )
      <selectKey property="ID_inf" type="post" resultClass="int">
        ${selectKey}
      </selectKey>
    </insert>
    <update id="MC.Model.Info_inf.Update" parameterClass="Info_inf">
      update Info_inf set
      InfoTypeID_inf = #InfoTypeID_inf#
      ,Title_inf = #Title_inf#
      ,Content_inf = #Content_inf#
      ,Hits_inf = #Hits_inf#
      ,TopType_inf = #TopType_inf#
      ,IndexTagID_inf = #IndexTagID_inf#
      ,CreateTime_inf = #CreateTime_inf#
      ,Author_inf = #Author_inf#
      ,Keywords_inf = #Keywords_inf#
      WHERE
      ID_inf = #ID_inf#
    </update>
    <delete id="MC.Model.Info_inf.Delete" parameterClass="list">
      delete
      FROM Info_inf
      WHERE ID_inf IN
      <iterate property="ids" open="(" close=")"  conjunction="," >
        #ids[]#
      </iterate>
    </delete>
  </statements>
</sqlMap>

