<%@ CodeTemplate Language="C#" TargetLanguage="C#" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the mapping file is based on" %>
<%@ Property Name="Namespace" Type="System.String" Default="MC.Model" Category="Object" Description="The class namespace that the mapping file should use" %>
<%@ Property Name="RemoveTablePrefix" Type="System.String" Default="tbl" Category="Object" Description="The prefix to remove from table names" %>
<%@ Property Name="Assembly" Type="System.String" Default="MC.Model" Category="Object" Description="The assembly that the class will be used in" %>
<%@ Property Name="ForceId" Type="System.Boolean" Default="true" Category="Object" Description="Force Id for identity column" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer"%>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
using System;
using System.Collections;
using System.Collections.Generic;

namespace <%= Namespace %>
{
	/// <summary>
    /// <%= SourceTable.Name %>
    /// </summary>
	[Serializable]
	public partial class <%= SourceTable.Name %> : Entity
	{ 
        #region method
		/// <summary>
        /// Table Name
        /// </summary>
        public override string GetTableName()
        {
            return  "<%=SourceTable.Name%>";
        }
		/// <summary>
        /// Keys
        /// </summary>
        public override string[] GetKeyCols()
        {
            return new string[] { <%= GetKeyCols() %> };
        }
        #endregion
		
		#region properties		
		<% foreach(ColumnSchema column in SourceTable.Columns) {%>
		
        /// <summary>
        /// <%= column.Description %>
        /// </summary>
		public <%= MemberType(column) %> <%= column.Name %>{ get; set; }
		<% }%>
		#endregion
	}
	<!-- #include file="function.inc" -->
}