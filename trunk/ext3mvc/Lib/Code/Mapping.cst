<%@ CodeTemplate Language="C#" TargetLanguage="xml" Src="" Inherits="" Debug="False" Description="Template description here." %>
<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="Table that the mapping file is based on" %>
<%@ Property Name="Namespace" Type="System.String" Default="MC.Model" Category="Object" Description="The class namespace that the mapping file should use" %>
<%@ Property Name="RemoveTablePrefix" Type="System.String" Default="tbl" Category="Object" Description="The prefix to remove from table names" %>
<%@ Property Name="Assembly" Type="System.String" Default="MC.Model" Category="Object" Description="The assembly that the class will be used in" %>
<%@ Property Name="ForceId" Type="System.Boolean" Default="true" Category="Object" Description="Force Id for identity column" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer"%>
<%@ Import Namespace="System.Data" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="<%=SourceTable.Name%>" xmlns="http://ibatis.apache.org/mapping"	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  >
     <alias>
         <typeAlias alias="<%=SourceTable.Name%>" type="<%=Namespace%>.<%=SourceTable.Name%>,<%=Namespace%>" />
     </alias>

<resultMaps>
   <resultMap id="SelectResult" class="<%=SourceTable.Name%>" > 
	<% foreach(ColumnSchema column in SourceTable.Columns) {%>
		<result property="<%= column.Name %>" column="<%= column.Name %>" /> 	
	<%}%>
   </resultMap> 
  </resultMaps>
  <statements>
    <sql id="<%=Namespace%>.<%=SourceTable.Name%>.sqlwhere">	
      <dynamic prepend="WHERE">
        <% foreach(ColumnSchema column in SourceTable.Columns) {%>
			<isNotNull prepend="AND" property="<%=column.Name%>">
				<%=AddSqlTrim(column)%> = #<%=column.Name%>#
        	</isNotNull>
		<%}%>
      </dynamic>
	</sql>
    <select id="<%=Namespace%>.<%=SourceTable.Name%>.Count" parameterClass="System.Collections.IDictionary" resultClass="int">
		Select count(1) FROM <%=SourceTable.Name%> <include refid="<%=Namespace%>.<%=SourceTable.Name%>.sqlwhere"/>
    </select>
    <select id="<%=Namespace%>.<%=SourceTable.Name%>.LoadPageList" parameterClass="System.Collections.IDictionary" resultMap="SelectResult">
      Select <%=GetSqlCol()%> FROM(
      Select <%=GetSqlCol()%>
      ,ROW_NUMBER() Over(
	  <dynamic>
        <isNotNull property="sort">order by $sort$ $dir$</isNotNull>
        <isNull property="sort">order by <%=AddSqlTrim(SourceTable.PrimaryKey.MemberColumns[0])%> desc</isNull>
      </dynamic>) as rowNum
      FROM <%=SourceTable.Name%>
	  <include refid="<%=Namespace%>.<%=SourceTable.Name%>.sqlwhere"/>
      ) as temptable
      <dynamic prepend="WHERE">
        <isNotNull prepend="AND" property="start">
          rowNum BETWEEN #start#+1
          <isNotNull prepend="AND" property="limit">
            #start#+#limit#
          </isNotNull>
        </isNotNull>
      </dynamic>
    </select>
    <select id="<%=Namespace%>.<%=SourceTable.Name%>.Load" parameterClass="System.Collections.IDictionary" resultMap="SelectResult">
		Select <%=GetSqlCol()%> FROM <%=SourceTable.Name%> 
		<dynamic prepend="WHERE">
		<% foreach(ColumnSchema column in SourceTable.Columns) {%>
			<isNotNull prepend="AND" property="<%=column.Name%>">
				<%=AddSqlTrim(column)%> = #<%=column.Name%>#
			</isNotNull>
		<%}%>
		</dynamic>
		<dynamic>
          <isNotNull property="OrderBy">
          $OrderBy$
          </isNotNull>
		</dynamic>
    </select>
    <insert id="<%=Namespace%>.<%=SourceTable.Name%>.Insert" parameterClass="<%=SourceTable.Name%>">
       insert into <%=SourceTable.Name%>(
       	<%for(int i=0;i<SourceTable.Columns.Count;i++){%>
			<%if(i!=0 && i==1){%>
			<%=SourceTable.Columns[i].Name%>
			<%}else if(i>1){%>
			,<%=SourceTable.Columns[i].Name%>
			<%}%>
		<%}%>
         )values (  
        <%for(int i=0;i<SourceTable.Columns.Count;i++){%>
			<%if(i!=0 && i==1){%>
			#<%=SourceTable.Columns[i].Name%>#
			<%}else if(i>1){%>
			,#<%=SourceTable.Columns[i].Name%>#
			<%}%>
		<%}%>
        ) 
      <selectKey property="<%=AddSqlTrim(SourceTable.PrimaryKey.MemberColumns[0])%>" type="post" resultClass="int">
        ${selectKey}
      </selectKey>
    </insert>
    <update id="<%=Namespace%>.<%=SourceTable.Name%>.Update" parameterClass="<%=SourceTable.Name%>">
       update <%=SourceTable.Name%> set 
		<%for(int i=0;i<SourceTable.Columns.Count;i++){%>
			<%if(i!=0 && i==1){%>
			<%=SourceTable.Columns[i].Name%> = #<%=SourceTable.Columns[i].Name%>#
			<%}else if(i>1){%>
			,<%=SourceTable.Columns[i].Name%> = #<%=SourceTable.Columns[i].Name%>#
			<%}%>
		<%}%>
       WHERE 
		<%if (SourceTable.HasPrimaryKey){%>
			<%for (int i=0;i<SourceTable.PrimaryKey.MemberColumns.Count;i++){%> 
				<%if(i==0){%>
			<%=AddSqlTrim(SourceTable.PrimaryKey.MemberColumns[i])%> = #<%=SourceTable.PrimaryKey.MemberColumns[i].Name%>#
				<%}else{%>
			AND <%=AddSqlTrim(SourceTable.PrimaryKey.MemberColumns[i])%> = #<%=SourceTable.PrimaryKey.MemberColumns[i].Name%>#
				<%}%>
			<%}%>
		<%}else{%>
			????
		<%}%>
		<%if(SourceTable.Columns.Contains("RECORD_VERSION")){%>
			AND (RECORD_VERSION = #RECORD_VERSION#)
		<%}%>
    </update>
    <delete id="<%=Namespace%>.<%=SourceTable.Name%>.Delete" parameterClass="list">
      delete
      FROM <%=SourceTable.Name%>
      WHERE <%=AddSqlTrim(SourceTable.PrimaryKey.MemberColumns[0])%> IN
      <iterate property="ids" open="(" close=")"  conjunction="," >
        #ids[]#
      </iterate>
    </delete>
  </statements>
</sqlMap>

<!-- #include file="function.inc" -->
